
{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Datastash - Alerter",
    "Parameters": {
    },
    "Resources": {
        "Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [ "ec2.amazonaws.com" ]
                            }
                        }
                    ]
                }
            }
        },
        "DescribeInstancesPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "DescribeLoadBalancers",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "elasticloadbalancing:DescribeLoadBalancers",
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ]
                },
                "Roles": [ { "Ref": "Role" } ]
            }
        },
        "InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [ { "Ref": "Role" } ]
            }
        },
        "AutoscalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": { "Fn::GetAZs": "" },
                "LaunchConfigurationName": { "Ref": "LaunchConfig" },
                "MinSize": "1",
                "MaxSize": "2",
                "DesiredCapacity": "1",
                "TerminationPolicies": [ "OldestInstance" ],
                "HealthCheckType": "EC2",
                "HealthCheckGracePeriod": 120,
                "LoadBalancerNames": [ ],
                "Tags": [
                    {
                        "Key": "Stack",
                        "Value": "datastash",
                        "PropagateAtLaunch": "true"
                    },
                    {
                        "Key": "App",
                        "Value": "alerter",
                        "PropagateAtLaunch": "true"
                    }
                ]
            }
        },
        "LaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": "ami-00b11177",
                "SecurityGroups": [
                    { "Ref": "SecurityGroup" }
                ],
                "InstanceType": "t1.micro",
                "IamInstanceProfile": { "Ref": "InstanceProfile" },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [ "\n", [
                            "#!/usr/bin/env bash",

                            "apt-add-repository -y ppa:chris-lea/node.js",
                            "apt-get -y update",
                            "apt-get -y install language-pack-en build-essential git nodejs",

                            "adduser --disabled-password datastash",
                            "cd /home/datastash",
                            "export HOME=/home/datastash",

                            "curl -O https://s3-eu-west-1.amazonaws.com/datastash/alerter.tar.gz",
                            "tar xfv alerter.tar.gz",

                            "cat authorized_keys > /home/ubuntu/.ssh/authorized_keys",

                            "npm install",

                            "chown -R datastash:datastash /home/datastash",

                            "echo '@hourly node alerter >> datastash-alerter.log 2>&1' | crontab -u datastash -"
                        ] ]
                    }
                }
            }
        },
        "SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SSH",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        }
    }
}
